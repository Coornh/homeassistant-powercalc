{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "model.json describes a number of devices, typically lights, for use within the HomeAssistant Powercalc extension.",
  "type": "object",
  "required": [
    "name",
    "measure_method",
    "measure_device",
    "calculation_strategy"
  ],
  "properties": {
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "Creation date of the profile"
    },
    "name": {
      "type": "string",
      "description": "The full name"
    },
    "description": {
      "type": "string",
      "description": "A short description of the device"
    },
    "standby_power": {
      "type": "number",
      "minimum": 0.05,
      "description": "Power draw when the device is turned off. When you are not able to measure set to 0.4 for lights"
    },
    "standby_power_on": {
      "type": "number",
      "minimum": 0.05,
      "description": "Power draw when the device is turned on."
    },
    "calculation_strategy": {
      "type": "string",
      "enum": [
        "lut",
        "linear",
        "fixed",
        "multi_switch",
        "composite"
      ],
      "description": "Supported calculation strategies"
    },
    "measure_method": {
      "type": "string",
      "enum": [
        "manual",
        "script"
      ],
      "description": "How the device was measured"
    },
    "measure_device": {
      "type": "string",
      "description": "Device which was used to measure"
    },
    "measure_device_firmware": {
      "type": "string",
      "description": "Firmware version of the device used to measure"
    },
    "measure_description": {
      "type": "string",
      "description": "Add more information about how you measured the device or any remarks"
    },
    "measure_settings": {
      "type": "object",
      "description": "Settings used for measure script"
    },
    "linked_lut": {
      "type": "string",
      "description": "Use LUT data files from another model"
    },
    "device_type": {
      "type": "string",
      "enum": [
        "camera",
        "cover",
        "light",
        "printer",
        "smart_dimmer",
        "smart_switch",
        "smart_speaker",
        "network",
        "vacuum_robot"
      ],
      "description": "Type of device"
    },
    "calculation_enabled_condition": {
      "type": "string",
      "description": "Template which can be evaluated."
    },
    "aliases": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Aliases for this model"
    },
    "linear_config": {
      "type": "object",
      "description": "Configuration for linear calculation strategy",
      "properties": {
        "min_power": {
          "type": "number"
        },
        "max_power": {
          "type": "number"
        },
        "calibrate": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "fixed_config": {
      "type": "object",
      "description": "Configuration for fixed calculation strategy",
      "properties": {
        "power": {
          "type": "number"
        },
        "states_power": {
          "type": "object",
          "description": "A dict of state attributes and the power. See https://github.com/bramstroker/homeassistant-powercalc#power-per-state.",
          "properties": {
            "idle": {
              "type": [
                "number",
                "string"
              ]
            },
            "playing": {
              "type": [
                "number",
                "string"
              ]
            },
            "paused": {
              "type": [
                "number",
                "string"
              ]
            },
            "off": {
              "type": [
                "number",
                "string"
              ]
            },
            "unavailable": {
              "type": [
                "number",
                "string"
              ]
            }
          },
          "additionalProperties": {
            "type": [
              "number",
              "string"
            ]
          }
        }
      }
    },
    "playbook_config": {
      "type": "object",
      "description": "Configuration for playbook calculation strategy",
      "properties": {
        "playbooks": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value pairs where the key is a playbook ID and the value is the filename."
        },
        "autostart": {
          "type": "string",
          "description": "The playbook ID to autostart."
        },
        "repeat": {
          "type": "boolean",
          "description": "Indicates if the playbook should repeat."
        },
        "state_trigger": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Start given playbook when entity state changes to given value."
        }
      },
      "required": [
        "playbooks"
      ]
    },
    "composite_config": {
      "type": "array",
      "description": "Configuration for composite calculation strategy",
      "items": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/definitions/condition"
          }
        }
      }
    },
    "config_flow_discovery_remarks": {
      "type": "string",
      "description": "Some remarks to show in the GUI config flow on first step of discovery"
    },
    "sensor_config": {
      "type": "object",
      "description": "Sensor configuration options. See the README"
    },
    "sub_profile_select": {
      "type": "object",
      "description": "Configuration to automatically select a sub profile",
      "required": [
        "default",
        "matchers"
      ],
      "properties": {
        "default": {
          "type": "string",
          "description": "Default profile to select when non of the matchers apply"
        },
        "matchers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "attribute",
                  "entity_id",
                  "entity_state",
                  "integration"
                ]
              },
              "attribute": {
                "type": "string"
              },
              "map": {
                "type": "object"
              },
              "pattern": {
                "type": "string"
              },
              "profile": {
                "type": "string"
              },
              "integration": {
                "type": "string"
              }
            },
            "required": [
              "type"
            ]
          },
          "description": "List of matchers which will be checked"
        }
      }
    }
  },
  "definitions": {
    "condition": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "enum": [
            "and",
            "or",
            "state",
            "numeric_state",
            "template"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        }
      },
      "additionalProperties": true
    }
  }
}
